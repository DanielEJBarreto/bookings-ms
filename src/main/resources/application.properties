#Porta de conexão de booking-ms
quarkus.http.port=9090

%test.quarkus.hibernate-orm.sql-load-script = test.sql

#Porta de conexão com vehicles-ms
quarkus.rest-client.vehicles-ms.url=http://localhost:8888
quarkus.rest-client.vehicles-ms.scope=ApplicationScoped

# URL de conexão (ajuste host, porta e nome do banco)
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5433/postgres

# Usuário e senha exigidos pelo Postgres
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres

# Driver JDBC
quarkus.datasource.db-kind=postgresql

# Habilita o pool de conexões
quarkus.datasource.jdbc.max-size=8

# Habilita e configura o ORM / Panache
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true

quarkus.datasource.devservices.enabled=true

# Cache com REDIS
quarkus.redis.devservices.enabled=true
quarkus.redis.timeout=5s
quarkus.log.level=INFO
quarkus.log.category."io.quarkus.cache".level=DEBUG

#KEYCLOAK
#Substitua seu-reino, seu-cliente e seu-segredo pelos valores reais do seu Keycloak.
quarkus.oidc.auth-server-url=http://localhost:8080/realms/myrealm
quarkus.oidc.client-id=myclient
quarkus.oidc.credentials.secret=n6eDbMvtxCuxMq8FPbBONQxG9gKvQEjK
quarkus.oidc.tls.verification=none
quarkus.oidc.token-path=/protocol/openid-connect/token
quarkus.oidc.discovery-enabled=true
quarkus.http.auth.permission.public.paths=/public/*
quarkus.http.auth.permission.public.policy=permit
quarkus.http.auth.permission.protected.paths=/bookings/*
quarkus.http.auth.permission.protected.policy=authenticated

# Dev Services para Kafka
quarkus.kafka.devservices.enabled=true

# Canal reserva-ativa (emissor)
mp.messaging.outgoing.reserva-ativa-out.topic=reserva-ativa
mp.messaging.outgoing.reserva-ativa-out.connector=smallrye-kafka
mp.messaging.outgoing.reserva-ativa-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Canal reserva-concluida (emissor)
mp.messaging.outgoing.reserva-concluida-out.topic=reserva-concluida
mp.messaging.outgoing.reserva-concluida-out.connector=smallrye-kafka
mp.messaging.outgoing.reserva-concluida-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Canal reserva-cancelada (emissor)
mp.messaging.outgoing.reserva-cancelada-out.topic=reserva-cancelada
mp.messaging.outgoing.reserva-cancelada-out.connector=smallrye-kafka
mp.messaging.outgoing.reserva-cancelada-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Canais de entrada para testes
# Canal reserva-ativa (consumidor)
mp.messaging.incoming.reserva-ativa-in.topic=reserva-ativa
mp.messaging.incoming.reserva-ativa-in.connector=smallrye-kafka
mp.messaging.incoming.reserva-ativa-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Canal reserva-concluida (consumidor)
mp.messaging.incoming.reserva-concluida-in.topic=reserva-concluida
mp.messaging.incoming.reserva-concluida-in.connector=smallrye-kafka
mp.messaging.incoming.reserva-concluida-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Canal reserva-cancelada (consumidor)
mp.messaging.incoming.reserva-cancelada-in.topic=reserva-cancelada
mp.messaging.incoming.reserva-cancelada-in.connector=smallrye-kafka
mp.messaging.incoming.reserva-cancelada-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
